{
  "triggerName": "iduSalesOrderDetail",
  "schemaName": "Sales",
  "definition": "CREATE TRIGGER [Sales].[iduSalesOrderDetail] ON [Sales].[SalesOrderDetail] \nAFTER INSERT, DELETE, UPDATE AS \nBEGIN\n    DECLARE @Count int;\n\n    SET @Count = @@ROWCOUNT;\n    IF @Count = 0 \n        RETURN;\n\n    SET NOCOUNT ON;\n\n    BEGIN TRY\n        -- If inserting or updating these columns\n        IF UPDATE([ProductID]) OR UPDATE([OrderQty]) OR UPDATE([UnitPrice]) OR UPDATE([UnitPriceDiscount]) \n        -- Insert record into TransactionHistory\n        BEGIN\n            INSERT INTO [Production].[TransactionHistory]\n                ([ProductID]\n                ,[ReferenceOrderID]\n                ,[ReferenceOrderLineID]\n                ,[TransactionType]\n                ,[TransactionDate]\n                ,[Quantity]\n                ,[ActualCost])\n            SELECT \n                inserted.[ProductID]\n                ,inserted.[SalesOrderID]\n                ,inserted.[SalesOrderDetailID]\n                ,'S'\n                ,GETDATE()\n                ,inserted.[OrderQty]\n                ,inserted.[UnitPrice]\n            FROM inserted \n                INNER JOIN [Sales].[SalesOrderHeader] \n                ON inserted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID];\n\n            UPDATE [Person].[Person] \n            SET [Demographics].modify('declare default element namespace \n                \u0022http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\u0022; \n                replace value of (/IndividualSurvey/TotalPurchaseYTD)[1] \n                with data(/IndividualSurvey/TotalPurchaseYTD)[1] + sql:column (\u0022inserted.LineTotal\u0022)') \n            FROM inserted \n                INNER JOIN [Sales].[SalesOrderHeader] AS SOH\n                ON inserted.[SalesOrderID] = SOH.[SalesOrderID] \n                INNER JOIN [Sales].[Customer] AS C\n                ON SOH.[CustomerID] = C.[CustomerID]\n            WHERE C.[PersonID] = [Person].[Person].[BusinessEntityID];\n        END;\n\n        -- Update SubTotal in SalesOrderHeader record. Note that this causes the \n        -- SalesOrderHeader trigger to fire which will update the RevisionNumber.\n        UPDATE [Sales].[SalesOrderHeader]\n        SET [Sales].[SalesOrderHeader].[SubTotal] = \n            (SELECT SUM([Sales].[SalesOrderDetail].[LineTotal])\n                FROM [Sales].[SalesOrderDetail]\n                WHERE [Sales].[SalesOrderHeader].[SalesOrderID] = [Sales].[SalesOrderDetail].[SalesOrderID])\n        WHERE [Sales].[SalesOrderHeader].[SalesOrderID] IN (SELECT inserted.[SalesOrderID] FROM inserted);\n\n        UPDATE [Person].[Person] \n        SET [Demographics].modify('declare default element namespace \n            \u0022http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\u0022; \n            replace value of (/IndividualSurvey/TotalPurchaseYTD)[1] \n            with data(/IndividualSurvey/TotalPurchaseYTD)[1] - sql:column(\u0022deleted.LineTotal\u0022)') \n        FROM deleted \n            INNER JOIN [Sales].[SalesOrderHeader] \n            ON deleted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID] \n            INNER JOIN [Sales].[Customer]\n            ON [Sales].[Customer].[CustomerID] = [Sales].[SalesOrderHeader].[CustomerID]\n        WHERE [Sales].[Customer].[PersonID] = [Person].[Person].[BusinessEntityID];\n    END TRY\n    BEGIN CATCH\n        EXECUTE [dbo].[uspPrintError];\n\n        -- Rollback any active or uncommittable transactions before\n        -- inserting information in the ErrorLog\n        IF @@TRANCOUNT > 0\n        BEGIN\n            ROLLBACK TRANSACTION;\n        END\n\n        EXECUTE [dbo].[uspLogError];\n    END CATCH;\nEND;",
  "tableName": "SalesOrderDetail"
}