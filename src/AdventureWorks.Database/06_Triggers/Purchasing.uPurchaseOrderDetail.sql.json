{
  "triggerName": "uPurchaseOrderDetail",
  "schemaName": "Purchasing",
  "definition": "CREATE TRIGGER [Purchasing].[uPurchaseOrderDetail]\n    ON [Purchasing].[PurchaseOrderDetail]\n    AFTER UPDATE\n    AS BEGIN\n           DECLARE @Count AS INT;\n           SET @Count = @@ROWCOUNT;\n           IF @Count = 0\n               RETURN;\n           SET NOCOUNT ON;\n           BEGIN TRY\n               IF UPDATE ([ProductID]) OR UPDATE ([OrderQty]) OR UPDATE ([UnitPrice])\n                   BEGIN\n                       INSERT INTO [Production].[TransactionHistory] ([ProductID], [ReferenceOrderID], [ReferenceOrderLineID], [TransactionType], [TransactionDate], [Quantity], [ActualCost])\n                       SELECT\n                           inserted.[ProductID],\n                           inserted.[PurchaseOrderID],\n                           inserted.[PurchaseOrderDetailID],\n                           'P',\n                           GETDATE(),\n                           inserted.[OrderQty],\n                           inserted.[UnitPrice]\n                       FROM  \n                           inserted INNER JOIN\n                           [Purchasing].[PurchaseOrderDetail] ON\n                                inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID];\n                       UPDATE [Purchasing].[PurchaseOrderHeader]\n                       SET    [Purchasing].[PurchaseOrderHeader].[SubTotal] = (SELECT\n                                                                                   SUM([Purchasing].[PurchaseOrderDetail].[LineTotal])\n                                                                               FROM  \n                                                                                   [Purchasing].[PurchaseOrderDetail] WHERE\n                                                                                                                           [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID]) WHERE\n                                                                                                                                                                                                                                             [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] IN (SELECT\n                                                                                                                                                                                                                                                                                                          inserted.[PurchaseOrderID]\n                                                                                                                                                                                                                                                                                                      FROM  \n                                                                                                                                                                                                                                                                                                          inserted);\n                       UPDATE [Purchasing].[PurchaseOrderDetail]\n                       SET    [Purchasing].[PurchaseOrderDetail].[ModifiedDate] = GETDATE()\n                       FROM  \n                           inserted WHERE\n                                         inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID] AND inserted.[PurchaseOrderDetailID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderDetailID];\n                   END\n           END TRY\n           BEGIN CATCH\n               EXECUTE [dbo].[uspPrintError] ;\n               IF @@TRANCOUNT > 0\n                   BEGIN\n                       ROLLBACK;\n                   END\n               EXECUTE [dbo].[uspLogError] ;\n           END CATCH\n       END",
  "tableName": "PurchaseOrderDetail"
}